#!/bin/bash

###============================================================================
###
###         FILE:  demo-drawline
###
###        USAGE:  demo-drawline
###
###  Description:  Demo various features of shmenu for debugging
###
###      OPTIONS:  --help, --verbose, --quiet
### REQUIREMENTS:  ui-functions, shmenu.conf
###         BUGS:  ---
###        NOTES:  ---
###       AUTHOR:  Michael A. Taylor (mataylortech@gmail.com)
###      COMPANY:  ---
###      VERSION:  Beta
###      CREATED:  04/03/2013
###     REVISION:  04/03/2013
###============================================================================

# Source
. ./ui-functions
. ./shmenu.conf

scriptname=$(basename $0)
TMP=`mktemp /tmp/${scriptname}.XXXXXX`

# Set a trap to remove the temp file when the program exits.
trap cleanup HUP QUIT TERM EXIT
trap interrupt INT

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
# FUNCTIONS
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

interrupt() {
  ## Trap Cntrl-C, set INT to 1
  INT=1
} # End of interrupt

cleanup() {
  ## Remove temp file if it exists.
  [ -f "$TMP" ] && rm -f $TMP
} # End of cleanup

usage_help() {
  ## Display title header to standard output
  cat "$0" | egrep '^###'
  return 0
} # End of Usage

#------------------------------------------------------------------------------
# PRE-PROCESSING
#------------------------------------------------------------------------------

# Initialize variables and arrays
INT=0
pattern=$null
color=$null

# Parse command-line parameters

while [ $# -gt 0 ]; do
  case "$1" in
    -h|--help)
      usage_help
      exit 0
      ;; 
    -v|--verbose)
      verbose=0
      shift
      ;;
    -q|--quiet)
      verbose=1
      shift
      ;;
    *)
      break
      ;;
  esac
done


#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# MAIN
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-



pattern=$(Dlg ENTRY "What text pattern would you like to repeat to make the line?")
[ -z $pattern ] && ErrorMsg "No pattern was entered.  Exiting." && exit 0

menu_list=(\
 "red"
 "blue"
 "yellow"
 "green"
 "purple"
 "bold")

Dlg MENU "Select Color" "What color would you like the line pattern to be?"
[ -z "$choice" ] && WarningMsg "No color was entered.  That's OK, we do not have to set a color"
color=$choice # for clarity


drawline "$pattern" "$color"  # if $color is null, that's OK.
tPause


