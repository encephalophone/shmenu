#!/bin/bash

###============================================================================
###
###         FILE:  demo-radiolist
###
###        USAGE:  demo-radiolist
###
###  Description:  Demo various features of shmenu for debugging
###
###      OPTIONS:  --help, --verbose, --quiet
### REQUIREMENTS:  ui-functions, shmenu.conf
###         BUGS:  ---
###        NOTES:  ---
###       AUTHOR:  Michael A. Taylor (mataylortech@gmail.com)
###      COMPANY:  ---
###      VERSION:  Beta
###      CREATED:  04/03/2013
###     REVISION:  04/03/2013
###============================================================================

# Source
. ./ui-functions
. ./shmenu.conf

scriptname=$(basename $0)
TMP=`mktemp /tmp/${scriptname}.XXXXXX`

# Set a trap to remove the temp file when the program exits.
trap cleanup HUP QUIT TERM EXIT
trap interrupt INT

#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
# FUNCTIONS
#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

interrupt() {
  ## Trap Cntrl-C, set INT to 1
  INT=1
} # End of interrupt

cleanup() {
  ## Remove temp file if it exists.
  [ -f "$TMP" ] && rm -f $TMP
} # End of cleanup

usage_help() {
  ## Display title header to standard output
  cat "$0" | egrep '^###'
  return 0
} # End of Usage

#------------------------------------------------------------------------------
# PRE-PROCESSING
#------------------------------------------------------------------------------

# Initialize variables and arrays
INT=0
Lorem="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
Curabitur="Curabitur risus lectus, suscipit quis ultrices hendrerit, mollis ac risus."
Ut_vitae="Ut vitae auctor massa."
Proin="Proin venenatis tellus lobortis mi euismod congue."
Curabitur="Curabitur luctus tortor nec orci tincidunt euismod."
Pellentesque="Pellentesque et nibh id leo scelerisque posuere."

# Parse command-line parameters

while [ $# -gt 0 ]; do
  case "$1" in
    -h|--help)
      usage_help
      exit 0
      ;; 
    -v|--verbose)
      verbose=0
      shift
      ;;
    -q|--quiet)
      verbose=1
      shift
      ;;
    *)
      break
      ;;
  esac
done


#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# MAIN
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

while [ ! $INT = 1 ]; do
# Reset option variable
option=$null

  menu_list=(\
    "submenu_no_option|Dlg RADIOLIST [Title] [List description]"
    "submenu_show_keys|Dlg --show-keys RADIOLIST [Title] [List description]")
    
  Dlg MENU "$scriptname" "RADIOLIST Menu Syntax Demo - Choose From the Following:"  
    
  case $choice in
    submenu_no_option)
      submenu_option=$null
      ;;
     submenu_show_keys)
      submenu_option="--show-keys"
      ;;
    *)
      vMSG "No Selection"
      exit 0
      ;;
  esac

  menu_list=(\
    "test_item_one|Item One|1a|apples|$Lorem"
    "test_item_two|Item Two|2b|bananas|$Curabitur"
    "test_item_three|Item Three|3c|coconuts|$Ut_vitae"
    "test_item_four|Item Four|4d|dates|$Proin"
    "test_item_five|Item Five|5e|emblic|$Curabitur"
    "test_item_six|Item Six|6f|fig|$Pellentesque")
    
  Dlg $submenu_option RADIOLIST "$scriptname" "RADIOLIST with Formated Items"
  [ ! $? = 0 ] && INT=1
  if [ ! -z "$choice" ]; then
    Dlg INFO "You selected $choice"
  else
    Dlg INFO "No Selection"
    INT=0
  fi

done
